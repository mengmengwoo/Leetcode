# 16. 3Sum Closest
# Time: O(n^2) Space: O(1)
class Solution:
    def threeSumClosest(self, nums: List[int], target: int) -> int:
        nums.sort()
        closest = float('inf')
        result = 0
        for i in range(len(nums)-2):
            l, r= i+1, len(nums)-1
            while l < r:
                curr_sum = nums[i] + nums[l] + nums[r]
                # update the closest
                if abs(target - curr_sum) < abs(closest):
                    closest = abs(curr_sum - target)
                    result = curr_sum
                if target - curr_sum > 0:
                    l+=1
                elif target - curr_sum < 0:
                    r-=1
                else:
                    return target
        return result
                
