class Solution:
    def fourSum(self, nums: List[int], target: int) -> List[List[int]]:
        # Time: O(n^3)
        if len(nums)< 4 : return []
        result = []
        nums.sort()
        for i in range(len(nums)-3):
            # skip duplicate
            if i > 0 and nums[i] == nums[i-1]:
                continue
            for j in range(i+1, len(nums)-2):
                # skip duplicate
                if j > i+1 and nums[j] == nums[j-1]:
                    continue
                left = j+1
                right = len(nums)-1
                while left < right:
                    curr_sum = nums[i] + nums[j] + nums[left] +nums[right]
                    if curr_sum < target:
                        left +=1
                    elif curr_sum > target:
                        right -=1
                    else:
                        result.append([nums[i], nums[j], nums[left], nums[right]])
                        left +=1
                        right -=1
                        # skip duplicate
                        while nums[left] == nums[left -1] and left < right:
                            left +=1
                        while nums[right] == nums[right+1] and left < right:
                            right -=1
        return result
